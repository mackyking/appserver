import {ethers as n} from "./ethers.esm.min.js";const e="@ethers-ancillary/bsc@0.0.3",t=new n.utils.Logger(e),r=[{name:"bsc-mainnet",chainId:56},{name:"bsc-testnet",chainId:97}];function s(n){if(null==n)return null;if("number"==typeof n){const e=r.filter((e=>e.chainId===n));return e.length?{name:e[0].name,chainId:e[0].chainId}:{name:"unknown",chainId:n}}if("string"==typeof n){const e=r.filter((e=>e.name===n));return e.length?{name:e[0].name,chainId:e[0].chainId}:null}if("string"==typeof n.name&&"number"==typeof n.chainId){const e=s(n.name),t=s(n.chainId);if(null==e&&null==t)return{name:n.name,chainId:n.chainId};if(e&&t&&e.name===t.name&&e.chainId===t.chainId)return e}return t.throwArgumentError("network chainId mismatch","network",n)}const a=new n.utils.Logger(e);class i extends n.providers.EtherscanProvider{constructor(e,t){const r=s(null==e?"bsc-mainnet":e);switch((r||{}).name){case"bsc-mainnet":case"bsc-testnet":break;default:a.throwError("unsupported network",n.utils.Logger.errors.UNSUPPORTED_OPERATION,{network:e})}super(r,t||"EVTS3CU31AATZV72YQ55TPGXGMVIFUQ9M9")}getBaseUrl(){switch(this.network?this.network.name:"invalid"){case"bsc-mainnet":return"https://api.bscscan.com";case"bsc-testnet":return"https://api-testnet.bscscan.com"}return a.throwArgumentError("unsupported network","network",this.network)}isCommunityResource(){return"EVTS3CU31AATZV72YQ55TPGXGMVIFUQ9M9"===this.apiKey}}function c(e,t){const r=[];return r.push(new i(e,(t||{}).bscscan||void 0)),new n.providers.FallbackProvider(r)}export{i as BscscanProvider,c as getDefaultProvider,s as getNetwork};
