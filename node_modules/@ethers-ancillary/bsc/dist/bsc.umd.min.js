!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("ethers")):"function"==typeof define&&define.amd?define(["exports","ethers"],n):n((e="undefined"!=typeof globalThis?globalThis:e||self)._ethers_bsc={},e.ethers)}(this,(function(e,n){"use strict";const t="@ethers-ancillary/bsc@0.0.3",r=new n.ethers.utils.Logger(t),s=[{name:"bsc-mainnet",chainId:56},{name:"bsc-testnet",chainId:97}];function i(e){if(null==e)return null;if("number"==typeof e){const n=s.filter((n=>n.chainId===e));return n.length?{name:n[0].name,chainId:n[0].chainId}:{name:"unknown",chainId:e}}if("string"==typeof e){const n=s.filter((n=>n.name===e));return n.length?{name:n[0].name,chainId:n[0].chainId}:null}if("string"==typeof e.name&&"number"==typeof e.chainId){const n=i(e.name),t=i(e.chainId);if(null==n&&null==t)return{name:e.name,chainId:e.chainId};if(n&&t&&n.name===t.name&&n.chainId===t.chainId)return n}return r.throwArgumentError("network chainId mismatch","network",e)}const o=new n.ethers.utils.Logger(t),c="EVTS3CU31AATZV72YQ55TPGXGMVIFUQ9M9";class a extends n.ethers.providers.EtherscanProvider{constructor(e,t){const r=i(null==e?"bsc-mainnet":e);switch((r||{}).name){case"bsc-mainnet":case"bsc-testnet":break;default:o.throwError("unsupported network",n.ethers.utils.Logger.errors.UNSUPPORTED_OPERATION,{network:e})}super(r,t||c)}getBaseUrl(){switch(this.network?this.network.name:"invalid"){case"bsc-mainnet":return"https://api.bscscan.com";case"bsc-testnet":return"https://api-testnet.bscscan.com"}return o.throwArgumentError("unsupported network","network",this.network)}isCommunityResource(){return this.apiKey===c}}e.BscscanProvider=a,e.getDefaultProvider=function(e,t){const r=[];return r.push(new a(e,(t||{}).bscscan||void 0)),new n.ethers.providers.FallbackProvider(r)},e.getNetwork=i,Object.defineProperty(e,"__esModule",{value:!0})}));
